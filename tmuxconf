### FUNCTIONAL ###

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Bind keys to expand or shrink pane
bind-key < resize-pane -L 25
bind-key > resize-pane -R 25

# bind keys to synchronize panes
bind-key Q set synchronize-pane

# break out pane into new window
bind-key m :break-pane

# leader + A sends the prefix of ^A up
# this is so you can jump to the beginning of the line in the shell
bind-key a send-prefix

# mouse behavior
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on

set-option -g default-terminal screen-256color

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode

# Setup 'v' to begin selection as in Vim, use vim keys
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection

# Paste to clipboard on OS X
# ugh why
# need reattach-to-user-namespace
#brew install reattach-to-user-namespace

bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

## Update default binding of `Enter` to also use copy-pipe

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

## Enable native Mac OS X copy/paste

set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"


### SUPERFICIAL ###

set-window-option -g display-panes-time 1000

# Status Bar
set-option -g status-interval 1

set-option -g status-justify centre

# Status Bar dark color
set-option -g status-bg black
set-option -g status-fg default
set-option -g pane-active-border-fg brightred
set-option -g pane-border-fg black

# reddish window status text
set-window-option -g window-status-current-fg brightred

set-option -g status-right '#(cat ~/.thyme-tmux) %l:%M%p'
set-option -g status-left 'ಠ_ಠ'

source-file ~/.tmux.conf.local

# bits stolen from:
# - https://github.com/square/maximum-awesome - helps vim work nicely with tmux
